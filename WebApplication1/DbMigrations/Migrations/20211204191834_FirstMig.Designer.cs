// <auto-generated />
using System;
using DbMigrations.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DbMigrations.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211204191834_FirstMig")]
    partial class FirstMig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DbMigrations.EntityModels.CathegoryEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WebPortalEntityModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WebPortalEntityModelId");

                    b.ToTable("Cathegories");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.NotificationEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubscritptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("SubscritptionId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.PostEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WebPortalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WebPortalId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.SubscritptionEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WebPortalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WebPortalId");

                    b.ToTable("Subscritptions");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.UserEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.WebPortalCathegoryEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CathegoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WebPortalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CathegoryId");

                    b.HasIndex("WebPortalId");

                    b.ToTable("WebPortalCathegories");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.WebPortalEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("WebPortals");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.CathegoryEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.WebPortalEntityModel", null)
                        .WithMany("Cathegories")
                        .HasForeignKey("WebPortalEntityModelId");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.NotificationEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.PostEntityModel", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigrations.EntityModels.SubscritptionEntityModel", "Subscritption")
                        .WithMany("Notifications")
                        .HasForeignKey("SubscritptionId");

                    b.Navigation("Post");

                    b.Navigation("Subscritption");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.PostEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.WebPortalEntityModel", "WebPortal")
                        .WithMany("Posts")
                        .HasForeignKey("WebPortalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WebPortal");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.SubscritptionEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.UserEntityModel", "User")
                        .WithMany("Subscritptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigrations.EntityModels.WebPortalEntityModel", "WebPortal")
                        .WithMany("Subscritptions")
                        .HasForeignKey("WebPortalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("WebPortal");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.WebPortalCathegoryEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.CathegoryEntityModel", "Cathegory")
                        .WithMany("WebPortalCathegories")
                        .HasForeignKey("CathegoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbMigrations.EntityModels.WebPortalEntityModel", "WebPortal")
                        .WithMany()
                        .HasForeignKey("WebPortalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cathegory");

                    b.Navigation("WebPortal");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.WebPortalEntityModel", b =>
                {
                    b.HasOne("DbMigrations.EntityModels.UserEntityModel", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.CathegoryEntityModel", b =>
                {
                    b.Navigation("WebPortalCathegories");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.SubscritptionEntityModel", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.UserEntityModel", b =>
                {
                    b.Navigation("Subscritptions");
                });

            modelBuilder.Entity("DbMigrations.EntityModels.WebPortalEntityModel", b =>
                {
                    b.Navigation("Cathegories");

                    b.Navigation("Posts");

                    b.Navigation("Subscritptions");
                });
#pragma warning restore 612, 618
        }
    }
}
